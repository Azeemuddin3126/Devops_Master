echo $SHELL

$PATH	Directories searched for commands	

$HOME	User’s home directory	

$USER	User of the session	

$PWD	Path of the present working directory

$TERM - type of command-line terminal being used

$EDITOR - user’s default editor

$HOSTNAME - hostname of the machine

$SHELL - the shell currently in use

--------------------------------------------
Challenge1.sh

#!/usr/bin/env bash

echo "Hello from codio: $USER"

echo "Our home directory is : $HOME"

echo "The shell we're using is: $shell"

echo "Our current working directory is: $PWD"

source /home/codio/workspace/commands2.txt

------------------------------------------------

> - Output redirection (overwrite)
>> - Output redirection (append)
< - Input redirection
<< - Here document
| - Pipe

-------------------------------

pwd > directory.txt

cat directory.txt

ls >> directory.txt

cat directory.txt

cat << ThisIsTheEnd
Is this the real life?
Is this just fantasy?
Caught in a landslide,
No escape from reality
ThisIsTheEnd

echo "Disk Space Usage Report" > diskspace.txt

df >> diskspace.txt

cat < diskspace.txt

cat << EndOfReport

ls /fakedir 1>output.txt 2>error.txt


-------------------------------------

Challenge2.sh

echo "Reporting for user: $USER" > introduction.txt 

echo "The home directory is: $HOME" >> introduction.txt 

ls /notReally 1>output.txt 2>error.txt

sort < champs.txt > alpha-winners.txt

cat alpha-winners.txt | less

-------------------------------------

echo /tmp/{one,two,three}/file.txt

touch image_{1..5}.{gif,png,jpg}

rm image_{1..5}.{gif,png,jpg}

echo r{i,o,u}se
----------------------------------------

book="Where the Sidewalk Ends" 

echo $book

echo ${book:6}

echo ${book:6:3}

echo ${book/Ends/Begins}

echo ${book//e/&}

echo ${book/e/&}

echo ${title//a/_}

echo $(( 9 / 10 ))

----------------------------

Challenge3

#!/bin/bash

echo ~+

echo {0..100..5}

mkdir {png,jpg,pdf}{1..3}

touch image_{1..5}

rm image_{1..5}

rmdir {png,jpg,pdf}{1..3}

echo "6 times 3 is equal to:$((6*3))"

message="impossible work"

echo ${message:2}

--------------------------------
Wild Cards
---------------------------------

# 1. Matching with "r?d"
echo r?d

# 2. Matching with "b??e"
echo b??e

# 3. Matching with square brackets [ ]
echo file[1-4]
echo img[a-g]

# 4. Matching with exclamation point "!" (excludes characters in range)
echo file[!1-4]
echo img[!a-g]

# 5. Matching with named character classes
echo *[[:alnum:]]*
echo *[[:alpha:]]*
echo *[[:digit:]]*
echo *[[:lower:]]*
echo *[[:punct:]]*
echo *[[:space:]]*
echo *[[:upper:]]*

ls i*.p*
------------------------------

echo "Today is $(date)."

--------------------------
File GLOBBONG
---------------------

touch doc{1..3}{a..c}.{txt,png}

ls *.txt

ls c*.txt

ls c*.txt

ls doc1?.txt

ls doc1??.txt

ls doc[1-5].png

ls doc[1-5][a-e].png

ls doc1[^c].png

ls doc[1-2][^a-b].png

ls doc[[:digit:]]a.txt

ls doc[[:digit:]][[:lower:]].txt

ls {*.txt,*.png}

rm doc{1..3}{a..c}.{txt,png}

---------------------------------------

Challange4

#!/bin/bash

echo "The current network host name is: $(hostname)"

ls c*.txt

ls *[[:digit:]]*.txt

ls file2?.txt

----------------------------------